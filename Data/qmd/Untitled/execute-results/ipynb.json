{
  "hash": "f9d51df20d76d65479f63597aabc0339",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"01_datawork\"\nauthor: \"Munkhtsetseg\"\nformat: html\neditor: visual\n---\n\n::: {.cell .hidden}\n\n```{.r .cell-code .hidden}\nknitr::opts_chunk$set(echo = TRUE)\n```\n:::\n\nLibrary\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\n```\n:::\n\n\n# Import the dataset and remove the duplicates\n\nImport the dataset from the directory of: ~/Data Input/Preprocessing data/Preprocessing data.csv, assign the dataset as object of df:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- read.csv(\"~/Data Input/Preprocessing data/Preprocessing data.csv\")\n```\n:::\n\n\nRemove the duplicates with the function of distinct(), assign the dataset as df_01:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_01 <- df %>%\n  distinct()\n```\n:::\n\n\n## Produce a table with missing data\n\nFor date options as year, month, etc:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nTable_NA_by_Year <- df_01 %>%\n  rowwise %>%\n  group_by(Station.name,Year) %>% \n  summarise(NA_date = sum(!is.na(Date)),\n            NA_PM2 = sum(is.na(PM2)),\n            NA_PM10 = sum(is.na(PM10)),\n            NA_Vis = sum(is.na(Visibility)),\n            NA_WD = sum(is.na(WD)),\n            NA_WS = sum(is.na(WS)),\n            NA_OPC = sum(is.na(OPC))\n            ) \n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`summarise()` has grouped output by 'Station.name'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code}\nTable_NA_by_Year\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 52 × 9\n# Groups:   Station.name [4]\n   Station.name  Year NA_date NA_PM2 NA_PM10 NA_Vis NA_WD NA_WS NA_OPC\n   <chr>        <int>   <int>  <int>   <int>  <int> <int> <int>  <int>\n 1 Dalanzadgad   2008    4630   1543    1672   1463  1566  1566   4630\n 2 Dalanzadgad   2009    8760    715     929    659   748   748   8760\n 3 Dalanzadgad   2010    8784    921    1086    756   787   787   8784\n 4 Dalanzadgad   2011    8760   2652    3309   1759  2394  2394   8760\n 5 Dalanzadgad   2012    5088   1074    3016    693  1412  1412   5088\n 6 Dalanzadgad   2013    6096   1766    1809   2479  1240  1240   6096\n 7 Dalanzadgad   2014    7800    843     921   6068  1482  1482   7800\n 8 Dalanzadgad   2015    8760   1539    1587   8115  2635  2635   8760\n 9 Dalanzadgad   2016    6288   1654    1613   5995  3306  3306   6288\n10 Dalanzadgad   2017    3264     36      45   3264  3264  3264   3264\n# ℹ 42 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\nwrite_csv(Table_NA_by_Year, file = \"../03_tables/Table_NA_by_Year.csv\")\n```\n:::\n\n\nFor station\n\n::: {.cell}\n\n```{.r .cell-code}\nTable_NA_by_Station <- df_01 %>%\n  rowwise %>%\n  group_by(Station.name) %>% \n  summarise(NA_date = sum(!is.na(Date)),\n            NA_PM2 = sum(is.na(PM2)),\n            NA_PM10 = sum(is.na(PM10)),\n            NA_Vis = sum(is.na(Visibility)),\n            NA_WD = sum(is.na(WD)),\n            NA_WS = sum(is.na(WS)),\n            NA_OPC = sum(is.na(OPC))\n  ) \nTable_NA_by_Station\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 8\n  Station.name NA_date NA_PM2 NA_PM10 NA_Vis NA_WD NA_WS NA_OPC\n  <chr>          <int>  <int>   <int>  <int> <int> <int>  <int>\n1 Dalanzadgad    69454  13081   16327  32475 20058 20058  69454\n2 Sainshand     101230  27588   36117  28986 13768 13768 101230\n3 UB             95662   7895    8785   3775  4121  4121  62421\n4 Zamynuud       99742  32281   33597  22525  5373  5373  99742\n```\n\n\n:::\n\n```{.r .cell-code}\nwrite_csv(Table_NA_by_Station, file = \"../03_tables/Table_NA_by_Station.csv\")\n```\n:::\n\n\nBy percentages\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nTable_NA_by_Station_percentage <- df_01 %>%\n  rowwise %>%\n  group_by(Station.name, Year) %>% \n  summarise(NA_date = sum(!is.na(Date)),\n            NA_PM2 = sum(is.na(PM2)),\n            NA_PM10 = sum(is.na(PM10)),\n            NA_Vis = sum(is.na(Visibility)),\n            NA_WD = sum(is.na(WD)),\n            NA_WS = sum(is.na(WS)),\n            NA_OPC = sum(is.na(OPC))\n  ) %>% \n  mutate(\n            NA_PM2p = if_else(NA_date != NA_PM2, NA_PM2/NA_date*100, 0)\n  ) %>%\n  do({q <- .$NA_PM2*100/.$NA_date; sdq <- sd(q); attr(sdq, \"data.all\") <- q; data.frame(sdq)}) \n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`summarise()` has grouped output by 'Station.name'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n Table_NA_by_Station_percentage\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 2\n# Groups:   Station.name [4]\n  Station.name   sdq\n  <chr>        <dbl>\n1 Dalanzadgad   10.7\n2 Sainshand     25.9\n3 UB            17.9\n4 Zamynuud      39.6\n```\n\n\n:::\n:::\n\n\nNote that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.\n\n# Remove the spikes, and produce an extended table\nRemove the spikes in the datasets, and produce the table with NA, with removed spikes; express it in a percentages.\n### Remove the spikes\nMethod 1. Mean value +- (3-5)SD\n\nMethod 2. Seasonal variations, and trend-mean\n\n## Save dataset in folder: 01_data_raw\n\n::: {.cell}\n\n:::\n\n\n# Tidy data\n## Fill the missing data\nMethod 1. Fill the gap\nMethod 2. Relationship equation\nMethod 3. Look-up table\n\n## Save dataset in folder: 02_data_tidy\n\n::: {.cell}\n\n:::\n",
    "supporting": [
      "Untitled_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}