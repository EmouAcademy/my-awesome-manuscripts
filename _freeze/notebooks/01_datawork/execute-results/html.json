{
  "hash": "f5ba535356c7035519cad75f3acc992c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"01_datawork\"\nauthor: \"Munkhtsetseg\"\ndate: \"today\"\noutput: html\n---\n\n\nLibrary\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(ggplot2)\n```\n:::\n\n\n## Import the dataset and remove the duplicates\n\nImport the dataset from the directory of: \\~/Data Input/Preprocessing data/Preprocessing data.csv, assign the dataset as object of df:\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndf <- read.csv(\"~/Data Input/Preprocessing data/Preprocessing data.csv\")\n```\n:::\n\n\nRemove the duplicates with the function of distinct(), assign the dataset as df_01:\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndf_00 <- df |>\n  distinct() |>\n  rename(correct_PM10 = PM2, correct_PM2 = PM10) |>\n  mutate(PM10=correct_PM10, PM2=correct_PM2, PM10_rel=PM10, PM2_rel=PM2, ratio = PM2/PM10)\n```\n:::\n\n\n## Produce a table with missing data\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndf_000 <- df_00 |>\n   filter(Year<2019 & Year >2008)\n\n\n\ndf_01 <- df_000 |>\n  rowwise() |>\nfilter((Year != 2019 & Station.name == \"Zamynuud\") | \n       (Year < 2016 & Station.name == \"Sainshand\") |\n       (Year < 2021 & Station.name == \"UB\") |\n       (Year < 2017 & Station.name == \"Dalanzadgad\")\n       )\n```\n:::\n\n\n#### For date options as year, month, etc:\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nTable_NA_by_Year <- df_01 |>\n  group_by(Station.name,Year) |> \n  summarise(NA_date = sum(!is.na(Date)),\n            NA_PM2 = sum(is.na(PM2)),\n            NA_PM10 = sum(is.na(PM10)),\n            NA_Vis = sum(is.na(Visibility)),\n            NA_WD = sum(is.na(WD)),\n            NA_WS = sum(is.na(WS)),\n            NA_OPC = sum(is.na(OPC))\n            ) \n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`summarise()` has grouped output by 'Station.name'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nTable_NA_by_Year\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 35 × 9\n# Groups:   Station.name [4]\n   Station.name  Year NA_date NA_PM2 NA_PM10 NA_Vis NA_WD NA_WS NA_OPC\n   <chr>        <int>   <int>  <int>   <int>  <int> <int> <int>  <int>\n 1 Dalanzadgad   2009    8760    929     715    659   748   748   8760\n 2 Dalanzadgad   2010    8784   1086     921    756   787   787   8784\n 3 Dalanzadgad   2011    8760   3309    2652   1759  2394  2394   8760\n 4 Dalanzadgad   2012    5088   3016    1074    693  1412  1412   5088\n 5 Dalanzadgad   2013    6096   1809    1766   2479  1240  1240   6096\n 6 Dalanzadgad   2014    7800    921     843   6068  1482  1482   7800\n 7 Dalanzadgad   2015    8760   1587    1539   8115  2635  2635   8760\n 8 Dalanzadgad   2016    6288   1613    1654   5995  3306  3306   6288\n 9 Sainshand     2009    8688    424     376    423   587   587   8688\n10 Sainshand     2010    8784   2577    2557   1113  1210  1210   8784\n# ℹ 25 more rows\n```\n\n\n:::\n:::\n\n\n#### For station\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nTable_NA_by_Station <- df_01 |>\n  group_by(Station.name) |> \n  summarise(NA_date = sum(!is.na(Date)),\n            NA_PM2 = sum(is.na(PM2)),\n            NA_PM10 = sum(is.na(PM10)),\n            NA_Vis = sum(is.na(Visibility)),\n            NA_WD = sum(is.na(WD)),\n            NA_WS = sum(is.na(WS)),\n            NA_OPC = sum(is.na(OPC))\n  ) \nTable_NA_by_Station\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 8\n  Station.name NA_date NA_PM2 NA_PM10 NA_Vis NA_WD NA_WS NA_OPC\n  <chr>          <int>  <int>   <int>  <int> <int> <int>  <int>\n1 Dalanzadgad    60336  14270   11164  26524 14004 14004  60336\n2 Sainshand      59040  11929   11727   9320  8527  8527  59040\n3 UB             76656   8716    7879   3770  4053  4053  43415\n4 Zamynuud       67392  10075    8880   3444  4960  4960  67392\n```\n\n\n:::\n:::\n\n\n### By percentages\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nTable_NA_by_Station_percentage <- df_01 |>\n  group_by(Station.name, Year) |> \n  summarise(NA_date = sum(!is.na(Date)),\n            NA_PM2 = sum(is.na(PM2)),\n            NA_PM10 = sum(is.na(PM10)),\n            NA_Vis = sum(is.na(Visibility)),\n            NA_WD = sum(is.na(WD)),\n            NA_WS = sum(is.na(WS)),\n            NA_OPC = sum(is.na(OPC))\n  ) |> \n  mutate(\n            NA_PM2p = if_else(NA_date != NA_PM2, NA_PM2/NA_date*100, 0)\n  ) |>\n  do({\n    PM10_perc <- .$NA_PM2*100/.$NA_date; \n      missing_PM10 <-mean(PM10_perc); \n      attr(missing_PM10, \"data.all\") <- PM10_perc; \n    PM2_perc <- .$NA_PM10*100/.$NA_date; \n      missing_PM2 <- mean(PM2_perc); \n      attr(missing_PM2, \"data.all\") <- PM2_perc;\n    Vis_perc <- .$NA_Vis*100/.$NA_date; \n      missing_Vis <- mean(Vis_perc); \n      attr(missing_Vis, \"data.all\") <- Vis_perc; \n    WS_perc <- .$NA_WS*100/.$NA_date; \n      missing_WS <- mean(WS_perc); \n      attr(missing_WS, \"data.all\") <- WS_perc; \n    WD_perc <- .$NA_WD*100/.$NA_date; \n      missing_WD <- mean(WD_perc); \n      attr(missing_WD, \"data.all\") <- WD_perc; \n  data.frame(missing_PM2, missing_PM10, missing_Vis, missing_WS, missing_WD)}) \n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`summarise()` has grouped output by 'Station.name'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n Table_NA_by_Station_percentage\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 6\n# Groups:   Station.name [4]\n  Station.name missing_PM2 missing_PM10 missing_Vis missing_WS missing_WD\n  <chr>              <dbl>        <dbl>       <dbl>      <dbl>      <dbl>\n1 Dalanzadgad         19.2         25.7       44.5       24.3       24.3 \n2 Sainshand           19.7         20.0       15.7       14.6       14.6 \n3 UB                  11.0         11.9        4.53       4.85       4.85\n4 Zamynuud            12.7         14.4        5.49       7.44       7.44\n```\n\n\n:::\n:::\n\n\n## Note that:\n\nWe use the data in the period of 2009-2018, which has been regarded as a monitoring work stabilized since 2008 when is the beginning of the monitoring. According to NIES, site maintenance was consistent up to 2018.\n\n+Sainshand site, data 2009-2015 get used; + Dalanzad site: 2009-2016. + UB: 2009-2018 + Zamyn uud: 2009-2018\n\n# Remove the spikes, and produce an extended table\n\nRemove the spikes in the datasets, and produce the table with NA, with removed spikes; express it in a percentages. #\\| Comments\\*kedjkdjk \\### Remove the spikes Method 1. Mean value +- (3-5)SD - Find Monthly mean\n#| flow: 1st - Remove spikes PMs >10 mgm/hour is unreasonable.\n#|           - Exclude 0 values in PMs.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndf_10 <- df_01 |>\n  filter(PM10 < 0.003 | PM2 < 0.003) \n\nggplot(df_01)+\n  geom_line(aes(x = Date,  y = PM2 ))+\n  geom_col(aes(x = Date, y =PM10 )) +\n  facet_wrap(~Station.name)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 39650 rows containing missing values (`position_stack()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 23168 rows containing missing values (`geom_line()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](01_datawork_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n#| flow: 2nd - ratio check. PM10 >= PM2.5\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndf_01 |>\n  filter(ratio >1) |>\n  ggplot(aes(x=PM2, y=PM10, size=WS)) +\n  geom_point() +\n  facet_wrap(~Station.name)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 1002 rows containing missing values (`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](01_datawork_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n#| flow: 2nd - ratio check. remove data of ratio>1\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndf_01 <- df_01 |>\n  filter(PM2<10 & PM10<10 & PM10 != 0 & PM2 != 0 & ratio < 1) \n\n    df_01 |>\n  ggplot(aes(x=PM2, y=PM10, size=WS)) +\n  geom_point() +\n  facet_wrap(~Station.name)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 8004 rows containing missing values (`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](01_datawork_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n\n#| flow: 2nd - Method 1. Mean value +- (3-5)SD - Monthly mean at stations\n#| output: false\n\n\nOption 1:\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndf_02a <- df_01 |>\n  group_by(Station.name, Month) |>\n  drop_na(PM2, PM10) |>\n  filter(PM2<10 & PM10<10) |>\n    dplyr::mutate_at(vars(PM2, PM10), \n                   ~ ifelse(near(., mean(.), sd(.) * 3), ., \"Outlier\")) |>\n  dplyr::filter_if(is.character, any_vars(. == \"Outlier\"))\ndf_02a\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,637 × 19\n# Groups:   Station.name, Month [48]\n    Year Month   Day  Hour correct_PM10 correct_PM2 Visibility    WD    WS\n   <int> <int> <int> <int>        <dbl>       <dbl>      <int> <int> <dbl>\n 1  2009     1     5    16        0.594       0.509       1814   260 0.788\n 2  2009     1     6     0        0.641       0.547        744   248 1.23 \n 3  2009     1     6     1        0.867       0.728       1093   277 0.738\n 4  2009     1     6     2        0.705       0.597       1723     0 1.62 \n 5  2009     1     9     1        0.756       0.656        992   292 0.429\n 6  2009     1     9     2        0.709       0.612       2098    55 1    \n 7  2009     1    15    12        0.818       0.718       5941   147 0.633\n 8  2009     1    16     1        0.742       0.556       2125   120 0.274\n 9  2009     1    30     1        0.915       0.797       1315     9 0.366\n10  2009     1    30     2        0.601       0.507       2485   309 0.713\n# ℹ 2,627 more rows\n# ℹ 10 more variables: WS.u <dbl>, WS.v <dbl>, OPC <int>, Station.name <chr>,\n#   Date <chr>, PM10 <chr>, PM2 <chr>, PM10_rel <dbl>, PM2_rel <dbl>,\n#   ratio <dbl>\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n  ggplot(df_02a, aes(x=Date, y=PM10_rel, color = Visibility, size=WS)) +\n  geom_point() +\n  facet_wrap(~Station.name)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 209 rows containing missing values (`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](01_datawork_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\n    ggplot(df_02a, aes(x=Date, y=PM2_rel, color = Visibility, size=WS)) +\n  geom_point() +\n  facet_wrap(~Station.name)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 209 rows containing missing values (`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](01_datawork_files/figure-html/unnamed-chunk-10-2.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\n      ggplot(df_02a, aes(x=Date, y=ratio, color = Visibility, size=WS)) +\n  geom_point() +\n  facet_wrap(~Station.name)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 209 rows containing missing values (`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](01_datawork_files/figure-html/unnamed-chunk-10-3.png){width=672}\n:::\n:::\n\n\nOption 2:\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndf_02a1 <- df_01 |>\n  group_by(Station.name, Month) |>\n  drop_na(PM2, PM10) |>\n    drop_na(PM2, PM10) |>\n    dplyr::mutate_at(vars(PM2, PM10), \n                   ~ ifelse(near(., mean(.), sd(.) * 3), ., mean(.)))\ndf_02a1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 118,482 × 19\n# Groups:   Station.name, Month [48]\n    Year Month   Day  Hour correct_PM10 correct_PM2 Visibility    WD    WS\n   <int> <int> <int> <int>        <dbl>       <dbl>      <int> <int> <dbl>\n 1  2009     1     1     0        0.087       0.073       3366   252 1.08 \n 2  2009     1     1     1        0.2         0.175       1999   317 0.546\n 3  2009     1     1     2        0.309       0.266       6756    87 1.03 \n 4  2009     1     1     3        0.105       0.089       9559   121 1.03 \n 5  2009     1     1     4        0.063       0.052      17664   121 0.46 \n 6  2009     1     1     5        0.027       0.021      11348    92 2.05 \n 7  2009     1     1     6        0.065       0.055      15397     0 1.6  \n 8  2009     1     1     7        0.03        0.023      20000   300 1.74 \n 9  2009     1     1     8        0.013       0.01       17384   305 1.29 \n10  2009     1     1     9        0.029       0.023       9322   324 2.96 \n# ℹ 118,472 more rows\n# ℹ 10 more variables: WS.u <dbl>, WS.v <dbl>, OPC <int>, Station.name <chr>,\n#   Date <chr>, PM10 <dbl>, PM2 <dbl>, PM10_rel <dbl>, PM2_rel <dbl>,\n#   ratio <dbl>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndf_02b <- df_01 |>\n  drop_na(PM2, PM10) |>\n    dplyr::mutate_at(vars(PM2, PM10), \n                   ~ ifelse(near(., mean(., .by = c(Station.name, Month)), sd(.) * 3), ., \"Outlier\")) |>\n  dplyr::filter_if(is.character, any_vars(. == \"Outlier\"))\ndf_02b\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3,267 × 19\n    Year Month   Day  Hour correct_PM10 correct_PM2 Visibility    WD    WS\n   <int> <int> <int> <int>        <dbl>       <dbl>      <int> <int> <dbl>\n 1  2009     1     1     2        0.309       0.266       6756    87 1.03 \n 2  2009     1     3    15        0.351       0.292       3444   119 0.856\n 3  2009     1     5     1        0.313       0.271       3392   275 2.56 \n 4  2009     1     5    13        0.482       0.419       1383   260 1.7  \n 5  2009     1     5    14        0.482       0.415       1072   266 1.84 \n 6  2009     1     5    15        0.549       0.466       1099   261 0.83 \n 7  2009     1     5    16        0.594       0.509       1814   260 0.788\n 8  2009     1     6     0        0.641       0.547        744   248 1.23 \n 9  2009     1     6     1        0.867       0.728       1093   277 0.738\n10  2009     1     6     2        0.705       0.597       1723     0 1.62 \n# ℹ 3,257 more rows\n# ℹ 10 more variables: WS.u <dbl>, WS.v <dbl>, OPC <int>, Station.name <chr>,\n#   Date <chr>, PM10 <chr>, PM2 <chr>, PM10_rel <dbl>, PM2_rel <dbl>,\n#   ratio <dbl>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndf_02b1 <- df_01 |>\n  drop_na(PM2, PM10) |>\n    dplyr::mutate_at(vars(PM2, PM10), \n                   ~ ifelse(near(., mean(., .by = c(Station.name, Month)), sd(.) * 3), ., mean(., .by =c(Station.name, Month)))) |>\ndplyr::filter_if(is.numeric, any_vars(. == mean(.)))\ndf_02b1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 0 × 19\n# ℹ 19 variables: Year <int>, Month <int>, Day <int>, Hour <int>,\n#   correct_PM10 <dbl>, correct_PM2 <dbl>, Visibility <int>, WD <int>,\n#   WS <dbl>, WS.u <dbl>, WS.v <dbl>, OPC <int>, Station.name <chr>,\n#   Date <chr>, PM10 <dbl>, PM2 <dbl>, PM10_rel <dbl>, PM2_rel <dbl>,\n#   ratio <dbl>\n```\n\n\n:::\n:::\n\n\n## Save dataset in folder: 01_data_raw\n\n\n::: {.cell}\n\n:::\n\n\n# Tidy data\n\n## Fill the missing data\n\nMethod 1. Fill the gap Method 2. Relationship equation Method 3. Look-up table\n\n## Save dataset in folder: 02_data_tidy\n\n\n::: {.cell}\n\n:::\n",
    "supporting": [
      "01_datawork_files/figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}